#!/bin/sh
# Usage:
#	check-toolchain GCC VERSION
#
# Example:
#	check-toolchain arm-unknown-linux-gnueabi-gcc crosstool-ng-1.22.0-234-g531eab4
#
# Create the file `.strict` in the top/root directory of the build system
# to fail the check with error status if toolchain has wrong version.  By
# default this script only warns.
#
CC=$1
VER=$2

if [ -e $ROOTDIR/.strict ]; then
    mesg="incorrect, bailing out!"
    warn="FAIL"
    rc=1
else
    mesg="unsupported."
    warn="WARN"
    rc=0
fi

if [ -z "$CC" -o -z "$VER" ]; then
   echo "Usage: $0 GCC VERSION"
   exit 1
fi

which $CC >/dev/null
if [ $? -ne 0 ]; then
    echo "  FAIL    Cannot find a suitable $CROSS_TARGET toolchain!"
    echo "          See the README for help on download and set up."
    exit 1
fi

printf "  CHECK   Toolchain version ... "
$CC --version |grep $VER >/dev/null 2>&1
if [ $? -ne 0 ]; then
    printf "$mesg\n"
    printf "  $warn    Unsupported toolchain, expected $VER ...\n"
    printf "          Update system/core.mk to change, or see README for help.\n"
    exit $rc
fi

printf "OK\n"
exit 0
